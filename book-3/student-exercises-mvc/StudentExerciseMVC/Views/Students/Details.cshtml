@model StudentExerciseMVC.Models.ViewModels.DetailStudentViewModel

@{
    ViewData["Title"] = "Details";
}


<h1>@ViewData["Title"]</h1>

<div>
    <h4>Student</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.student.Id)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.student.Id)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.student.FirstName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.student.FirstName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.student.LastName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.student.LastName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.student.SlackHandle)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.student.SlackHandle)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.student.CohortId)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.student.CohortId)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.student.CurrentCohort)

        <dd class="col-sm-2"> @Html.DisplayFor(model => model.student.CurrentCohort.Name)</dd>

        </dt>

    </dl>
    @if (Model.student.exercises != null) { 
        <h4>Exercises:</h4>
    <hr />

    
    @foreach (var exercise in Model.student.exercises)
    {
        <dl class="row">
            <dt class="col-sm-2">@Html.DisplayNameFor(ModelItem => exercise.Id) </dt>
            <dd class="col-sm-10"> @Html.DisplayFor(ModelItem => exercise.Id)</dd>


            <dt class="col-sm-2">@Html.DisplayNameFor(ModelItem => exercise.Name)</dt>
            <dd class="col-sm-10">@Html.DisplayFor(ModelItem => exercise.Name)</dd>


            <dt class="col-sm-2">@Html.DisplayNameFor(ModelItem => exercise.ProgramLang)</dt>
            <dd class="col-sm-10">@Html.DisplayFor(ModelItem => exercise.ProgramLang)</dd>

        </dl>

        <div class="form-check">
            @* if the exercise is complete, the checkbox should be checked *@
            @if (Model.completedExercises.Contains(exercise.Id))
            {<input type="checkbox" class="form-check-input" id="checkbox-exercise" checked onchange=markExerciseIncomplete(@exercise.Id)>}

            else{<input type="checkbox" class="form-check-input" id="checkbox-exercise" onchange=markExerciseComplete()>}            

            <label class="form-check-label" for="exampleCheck1">Completed</label>
        </div>

}
    }


</div>
<div>
    @Html.ActionLink("Edit", "Edit", new { id = Model.student.Id }) |
    <a asp-action="Index">Back to List</a>
</div>
